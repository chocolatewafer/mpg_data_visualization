{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Data visualization using Plotly","text":""},{"location":"#overview","title":"Overview","text":"<p>This is a project to learn data visualization and exploration using a Seaborn-dataset (mpg.csv). The dataset comprises of miles-per-gallon values of cars along with other metrics of those cars made between 1970-1982.</p> <p>I have used plotly to plot and visualize data and derive a few conclusions. Feel free to point out any mistakes or make modifications and further analysis of your own.</p>"},{"location":"#documentation","title":"Documentation","text":"<p>This documentation contains a pre-rendered notebook attached to it for you to check out. Checkout the Notebook.</p> <p>Note that it is not a fullly interactive notebook. For a fully interactive notebook, please download data_exploration.ipynb from the Github repo.</p> <p>There is also a Streamlit app for this visualization Coming soon!</p>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>\u2514\u2500\u2500 \ud83d\udcc1mpg_visualization\n    \u2514\u2500\u2500 \ud83d\udcc1assets\n        \u2514\u2500\u2500 1977_mazda_rx-4.jpg\n        \u2514\u2500\u2500 1980_mazda_rx-7.jpg\n        \u2514\u2500\u2500 audi_5000.jpg\n        \u2514\u2500\u2500 buick_regal_sport_coupe.jpg\n        \u2514\u2500\u2500 harvester_intl_1200D.png\n        \u2514\u2500\u2500 mazda_glc.png\n        \u2514\u2500\u2500 pontiac_GP.jpg\n        \u2514\u2500\u2500 pugeot_504.png\n        \u2514\u2500\u2500 saab_99le.jpg\n    \u2514\u2500\u2500 \ud83d\udcc1data\n        \u2514\u2500\u2500 mpg.csv\n    \u2514\u2500\u2500 \ud83d\udcc1docs\n        \u2514\u2500\u2500 \ud83d\udcc1assets\n            \u2514\u2500\u2500 car.png\n            \u2514\u2500\u2500 data.png\n        \u2514\u2500\u2500 data_exploration_rendered.ipynb\n        \u2514\u2500\u2500 \ud83d\udcc1images\n            \u2514\u2500\u2500 plt_1.png\n            .\n            .\n            .\n            \u2514\u2500\u2500 plt_22.png\n        \u2514\u2500\u2500 index.md\n    \u2514\u2500\u2500 data_exploration.ipynb\n    \u2514\u2500\u2500 data_exploration.py\n    \u2514\u2500\u2500 mkdocs.yml\n</code></pre>"},{"location":"data_exploration_rendered/","title":"Data Visualization of seaborn-data","text":"In\u00a0[96]: Copied! <pre>import pandas as pd\nimport plotly as plt\nimport plotly.graph_objects as go\nimport plotly.express as px\nimport kaleido\n</pre> import pandas as pd import plotly as plt import plotly.graph_objects as go import plotly.express as px import kaleido  In\u00a0[97]: Copied! <pre>mpg_data = pd.read_csv('https://raw.githubusercontent.com/mwaskom/seaborn-data/refs/heads/master/mpg.csv')\n# or read from data/mpg.csv\nmpg_data.head(10)\n</pre> mpg_data = pd.read_csv('https://raw.githubusercontent.com/mwaskom/seaborn-data/refs/heads/master/mpg.csv') # or read from data/mpg.csv mpg_data.head(10) Out[97]: mpg cylinders displacement horsepower weight acceleration model_year origin name 0 18.0 8 307.0 130.0 3504 12.0 70 usa chevrolet chevelle malibu 1 15.0 8 350.0 165.0 3693 11.5 70 usa buick skylark 320 2 18.0 8 318.0 150.0 3436 11.0 70 usa plymouth satellite 3 16.0 8 304.0 150.0 3433 12.0 70 usa amc rebel sst 4 17.0 8 302.0 140.0 3449 10.5 70 usa ford torino 5 15.0 8 429.0 198.0 4341 10.0 70 usa ford galaxie 500 6 14.0 8 454.0 220.0 4354 9.0 70 usa chevrolet impala 7 14.0 8 440.0 215.0 4312 8.5 70 usa plymouth fury iii 8 14.0 8 455.0 225.0 4425 10.0 70 usa pontiac catalina 9 15.0 8 390.0 190.0 3850 8.5 70 usa amc ambassador dpl In\u00a0[98]: Copied! <pre>mpg_data.isna().sum()\n</pre> mpg_data.isna().sum() Out[98]: <pre>mpg             0\ncylinders       0\ndisplacement    0\nhorsepower      6\nweight          0\nacceleration    0\nmodel_year      0\norigin          0\nname            0\ndtype: int64</pre> In\u00a0[99]: Copied! <pre>mpg_data[mpg_data.isna().any(axis=1)]\n</pre> mpg_data[mpg_data.isna().any(axis=1)] Out[99]: mpg cylinders displacement horsepower weight acceleration model_year origin name 32 25.0 4 98.0 NaN 2046 19.0 71 usa ford pinto 126 21.0 6 200.0 NaN 2875 17.0 74 usa ford maverick 330 40.9 4 85.0 NaN 1835 17.3 80 europe renault lecar deluxe 336 23.6 4 140.0 NaN 2905 14.3 80 usa ford mustang cobra 354 34.5 4 100.0 NaN 2320 15.8 81 europe renault 18i 374 23.0 4 151.0 NaN 3035 20.5 82 usa amc concord dl In\u00a0[100]: Copied! <pre>mpg_data.dropna(inplace=True)\n</pre> mpg_data.dropna(inplace=True) In\u00a0[101]: Copied! <pre>mpg_data['horsepower'] = pd.to_numeric(mpg_data['horsepower'])\n</pre> mpg_data['horsepower'] = pd.to_numeric(mpg_data['horsepower']) In\u00a0[102]: Copied! <pre>mpg_data.describe()\n</pre> mpg_data.describe() Out[102]: mpg cylinders displacement horsepower weight acceleration model_year count 392.000000 392.000000 392.000000 392.000000 392.000000 392.000000 392.000000 mean 23.445918 5.471939 194.411990 104.469388 2977.584184 15.541327 75.979592 std 7.805007 1.705783 104.644004 38.491160 849.402560 2.758864 3.683737 min 9.000000 3.000000 68.000000 46.000000 1613.000000 8.000000 70.000000 25% 17.000000 4.000000 105.000000 75.000000 2225.250000 13.775000 73.000000 50% 22.750000 4.000000 151.000000 93.500000 2803.500000 15.500000 76.000000 75% 29.000000 8.000000 275.750000 126.000000 3614.750000 17.025000 79.000000 max 46.600000 8.000000 455.000000 230.000000 5140.000000 24.800000 82.000000 In\u00a0[103]: Copied! <pre>mpg_data.loc[mpg_data['horsepower'] == mpg_data['horsepower'].max()]\n</pre> mpg_data.loc[mpg_data['horsepower'] == mpg_data['horsepower'].max()] Out[103]: mpg cylinders displacement horsepower weight acceleration model_year origin name 116 16.0 8 400.0 230.0 4278 9.5 73 usa pontiac grand prix In\u00a0[104]: Copied! <pre>mpg_data.loc[mpg_data['acceleration'] == mpg_data['acceleration'].max()]\n</pre> mpg_data.loc[mpg_data['acceleration'] == mpg_data['acceleration'].max()] Out[104]: mpg cylinders displacement horsepower weight acceleration model_year origin name 299 27.2 4 141.0 71.0 3190 24.8 79 europe peugeot 504 In\u00a0[105]: Copied! <pre>mpg_data.loc[mpg_data['mpg'] == mpg_data['mpg'].max()]\n</pre> mpg_data.loc[mpg_data['mpg'] == mpg_data['mpg'].max()] Out[105]: mpg cylinders displacement horsepower weight acceleration model_year origin name 322 46.6 4 86.0 65.0 2110 17.9 80 japan mazda glc In\u00a0[106]: Copied! <pre>mpg_data.loc[mpg_data['mpg'] == mpg_data['mpg'].min()]\n</pre> mpg_data.loc[mpg_data['mpg'] == mpg_data['mpg'].min()] Out[106]: mpg cylinders displacement horsepower weight acceleration model_year origin name 28 9.0 8 304.0 193.0 4732 18.5 70 usa hi 1200d In\u00a0[107]: Copied! <pre>mpg_data.loc[mpg_data['cylinders']==3]\n</pre> mpg_data.loc[mpg_data['cylinders']==3] Out[107]: mpg cylinders displacement horsepower weight acceleration model_year origin name 71 19.0 3 70.0 97.0 2330 13.5 72 japan mazda rx2 coupe 111 18.0 3 70.0 90.0 2124 13.5 73 japan maxda rx3 243 21.5 3 80.0 110.0 2720 13.5 77 japan mazda rx-4 334 23.7 3 70.0 100.0 2420 12.5 80 japan mazda rx-7 gs In\u00a0[108]: Copied! <pre>mpg_data.loc[mpg_data['cylinders']==3].sort_values(by= 'horsepower',ascending=False).iloc[0]\n</pre> mpg_data.loc[mpg_data['cylinders']==3].sort_values(by= 'horsepower',ascending=False).iloc[0] Out[108]: <pre>mpg                   21.5\ncylinders                3\ndisplacement          80.0\nhorsepower           110.0\nweight                2720\nacceleration          13.5\nmodel_year              77\norigin               japan\nname            mazda rx-4\nName: 243, dtype: object</pre> In\u00a0[109]: Copied! <pre>mpg_data.loc[mpg_data['cylinders']==4].sort_values(by= 'horsepower',ascending=False).iloc[0]\n</pre> mpg_data.loc[mpg_data['cylinders']==4].sort_values(by= 'horsepower',ascending=False).iloc[0]  Out[109]: <pre>mpg                  25.0\ncylinders               4\ndisplacement        121.0\nhorsepower          115.0\nweight               2671\nacceleration         13.5\nmodel_year             75\norigin             europe\nname            saab 99le\nName: 180, dtype: object</pre> In\u00a0[110]: Copied! <pre>mpg_data.loc[mpg_data['cylinders']==5].sort_values(by= 'horsepower',ascending=False).iloc[0]\n</pre> mpg_data.loc[mpg_data['cylinders']==5].sort_values(by= 'horsepower',ascending=False).iloc[0] Out[110]: <pre>mpg                  20.3\ncylinders               5\ndisplacement        131.0\nhorsepower          103.0\nweight               2830\nacceleration         15.9\nmodel_year             78\norigin             europe\nname            audi 5000\nName: 274, dtype: object</pre> In\u00a0[111]: Copied! <pre>mpg_data.loc[mpg_data['cylinders']==6].sort_values(by= 'horsepower',ascending=False).iloc[0]\n</pre> mpg_data.loc[mpg_data['cylinders']==6].sort_values(by= 'horsepower',ascending=False).iloc[0] Out[111]: <pre>mpg                                        17.7\ncylinders                                     6\ndisplacement                              231.0\nhorsepower                                165.0\nweight                                     3445\nacceleration                               13.4\nmodel_year                                   78\norigin                                      usa\nname            buick regal sport coupe (turbo)\nName: 263, dtype: object</pre> In\u00a0[112]: Copied! <pre>mpg_data.loc[mpg_data['cylinders']==8].sort_values(by= 'horsepower',ascending=False).iloc[0]\n</pre> mpg_data.loc[mpg_data['cylinders']==8].sort_values(by= 'horsepower',ascending=False).iloc[0]  Out[112]: <pre>mpg                           16.0\ncylinders                        8\ndisplacement                 400.0\nhorsepower                   230.0\nweight                        4278\nacceleration                   9.5\nmodel_year                      73\norigin                         usa\nname            pontiac grand prix\nName: 116, dtype: object</pre> In\u00a0[113]: Copied! <pre>from plotly.subplots import make_subplots\nfrom skimage import io\n\npath = \"../assets/\"\n\nimages = ['1977_mazda_rx-4.jpg', '1980_mazda_rx-7.jpg', 'audi_5000.jpg',\n          'buick_regal_sport_coupe.jpg', 'harvester_intl_1200D.png',\n          'mazda_glc.png', 'pontiac_GP.jpg', 'pugeot_504.png', 'saab_99le.jpg']\n\nnames = ['Powerful 3 cylinder car','Newer gen 3 cylinder car','Powerful 5 cylinder car',\n         'Powerful 6 cylinder car','Least fuel efficient in the dataset',\n         'Most fuel efficient in the dataset','Highest Horsepower in the dataset',\n         'Highest acceleration in the dataset','Powerful 4 cylinder car'\n        ]\nfig = make_subplots(rows=5, cols=2)\nsubplots =  [(1,1),(1,2),(2,1),(2,2),(3,1),(3,2),(4,1),(4,2),(5,1),(5,2)] \n\nfor i in range(len(images)):\n    row,cols=subplots[i]\n    img = io.imread(path + images[i])\n    fig.add_trace(go.Image(z=img), row=row, col=cols)\n    fig.update_xaxes(title_text = f\"{names[i]} : {images[i].split('.')[0]}\", row= row, col=cols, showticklabels=False)\n    fig.update_yaxes(showticklabels=False)\n# Layout\nfig.update_layout(title_text=\"Cars of different Categories\", height=int(1920*0.75), width=int(1440*0.75))\nfig.write_image(\"images/plt_1.png\")\n</pre> from plotly.subplots import make_subplots from skimage import io  path = \"../assets/\"  images = ['1977_mazda_rx-4.jpg', '1980_mazda_rx-7.jpg', 'audi_5000.jpg',           'buick_regal_sport_coupe.jpg', 'harvester_intl_1200D.png',           'mazda_glc.png', 'pontiac_GP.jpg', 'pugeot_504.png', 'saab_99le.jpg']  names = ['Powerful 3 cylinder car','Newer gen 3 cylinder car','Powerful 5 cylinder car',          'Powerful 6 cylinder car','Least fuel efficient in the dataset',          'Most fuel efficient in the dataset','Highest Horsepower in the dataset',          'Highest acceleration in the dataset','Powerful 4 cylinder car'         ] fig = make_subplots(rows=5, cols=2) subplots =  [(1,1),(1,2),(2,1),(2,2),(3,1),(3,2),(4,1),(4,2),(5,1),(5,2)]   for i in range(len(images)):     row,cols=subplots[i]     img = io.imread(path + images[i])     fig.add_trace(go.Image(z=img), row=row, col=cols)     fig.update_xaxes(title_text = f\"{names[i]} : {images[i].split('.')[0]}\", row= row, col=cols, showticklabels=False)     fig.update_yaxes(showticklabels=False) # Layout fig.update_layout(title_text=\"Cars of different Categories\", height=int(1920*0.75), width=int(1440*0.75)) fig.write_image(\"images/plt_1.png\")  In\u00a0[114]: Copied! <pre>fig = px.histogram(data_frame=mpg_data, x='cylinders')\nfig.write_image(\"images/plt_2.png\")\n</pre> fig = px.histogram(data_frame=mpg_data, x='cylinders') fig.write_image(\"images/plt_2.png\") <p>We can see from this chart that most Cars are 4, 6 or 8 cylinders. This might be due to even numbers of cylinders providing better manufacturing cost, efficiency or performance, due to which car manufacturers choose this configuration.</p> <p>A quick search gives us a good overview: why-arent-there-seven-cylinder-engines. It turns out engines with odd configurations are rather unstable and have vibrations, making even configurations preferable for balance and smoothness.</p> <p>What we can also observe is that we have higher number of 4 cylinder cars in our data. One hypothesis might be that 4 cylinder cars are more fuel efficient. On the contrary it can also be that while 6 and 8 are more fuel efficient, they might be more expensive and hence less sought ought by average buyers.</p> <p>One final consideration to this line of thinking should be that the data collection might be uneven, giving us this particular distribution of cars; making both of our hypothesis completely invalid.</p> In\u00a0[115]: Copied! <pre>fig = px.box(data_frame=mpg_data.sort_values(by='cylinders'), y=['horsepower'], facet_col='cylinders')\nfig.write_image(\"images/plt_3.png\")\n</pre>  fig = px.box(data_frame=mpg_data.sort_values(by='cylinders'), y=['horsepower'], facet_col='cylinders') fig.write_image(\"images/plt_3.png\") <p></p> In\u00a0[116]: Copied! <pre>fig = px.box(data_frame=mpg_data.sort_values(by='cylinders'), y=['mpg'], facet_col='cylinders')\nfig.write_image(\"images/plt_4.png\")\n</pre>  fig = px.box(data_frame=mpg_data.sort_values(by='cylinders'), y=['mpg'], facet_col='cylinders') fig.write_image(\"images/plt_4.png\") <p></p> In\u00a0[117]: Copied! <pre>mpg_data[mpg_data.horsepower == 165 ]\n</pre> mpg_data[mpg_data.horsepower == 165 ] Out[117]: mpg cylinders displacement horsepower weight acceleration model_year origin name 1 15.0 8 350.0 165.0 3693 11.5 70 usa buick skylark 320 38 14.0 8 350.0 165.0 4209 12.0 71 usa chevrolet impala 62 13.0 8 350.0 165.0 4274 12.0 72 usa chevrolet impala 263 17.7 6 231.0 165.0 3445 13.4 78 usa buick regal sport coupe (turbo) In\u00a0[118]: Copied! <pre>mpg_data[mpg_data.horsepower == 230 ]\n</pre> mpg_data[mpg_data.horsepower == 230 ] Out[118]: mpg cylinders displacement horsepower weight acceleration model_year origin name 116 16.0 8 400.0 230.0 4278 9.5 73 usa pontiac grand prix In\u00a0[119]: Copied! <pre>mpg_data[(mpg_data.mpg == 38) &amp; (mpg_data.cylinders == 6)]\n</pre> mpg_data[(mpg_data.mpg == 38) &amp; (mpg_data.cylinders == 6)] Out[119]: mpg cylinders displacement horsepower weight acceleration model_year origin name 387 38.0 6 262.0 85.0 3015 17.0 82 usa oldsmobile cutlass ciera (diesel) In\u00a0[120]: Copied! <pre>mpg_data[(mpg_data.mpg == 26.6) &amp; (mpg_data.cylinders == 8)]\n</pre> mpg_data[(mpg_data.mpg == 26.6) &amp; (mpg_data.cylinders == 8)] Out[120]: mpg cylinders displacement horsepower weight acceleration model_year origin name 364 26.6 8 350.0 105.0 3725 19.0 81 usa oldsmobile cutlass ls In\u00a0[121]: Copied! <pre>fig = px.histogram(data_frame=mpg_data, y = 'origin', color='origin')\nfig.write_image(\"images/plt_5.png\")\n</pre> fig = px.histogram(data_frame=mpg_data, y = 'origin', color='origin') fig.write_image(\"images/plt_5.png\") <p></p> <p>Seems like most cars in our dataset are USA based and there are only two other origins i.e. Japan and Europe. We can now analyze our cars categoirically based on the countries. Let us see what differences cars of each country possess.</p> In\u00a0[122]: Copied! <pre>fig = px.histogram(data_frame=mpg_data, x = 'model_year', facet_col='origin')\nfig.write_image(\"images/plt_6.png\")\n</pre> fig = px.histogram(data_frame=mpg_data, x = 'model_year', facet_col='origin') fig.write_image(\"images/plt_6.png\") <p></p> In\u00a0[123]: Copied! <pre>fig = px.box(data_frame=mpg_data, y = ['mpg', 'acceleration'], facet_col='origin')\nfig.write_image(\"images/plt_7.png\")\n</pre> fig = px.box(data_frame=mpg_data, y = ['mpg', 'acceleration'], facet_col='origin') fig.write_image(\"images/plt_7.png\") <p></p> In\u00a0[124]: Copied! <pre>fig = px.box(data_frame=mpg_data, y = 'horsepower', facet_col='origin')\nfig.write_image(\"images/plt_8.png\")\n</pre> fig = px.box(data_frame=mpg_data, y = 'horsepower', facet_col='origin') fig.write_image(\"images/plt_8.png\")  <p></p> In\u00a0[125]: Copied! <pre>mpg_data.groupby('origin').agg(mean_horsepower = ('horsepower','mean')).reset_index()\n</pre> mpg_data.groupby('origin').agg(mean_horsepower = ('horsepower','mean')).reset_index() Out[125]: origin mean_horsepower 0 europe 80.558824 1 japan 79.835443 2 usa 119.048980 <p>This shows us that Japanese cars are the most fuel efficient while USA has on average, more powerful cars. Also worth noting is that USA has a higher fence for hp meaning that there are car variants that are very powerful (muscle cars) which we see lacking in other countires.</p> In\u00a0[126]: Copied! <pre>fig = px.scatter(data_frame=mpg_data, x='cylinders', y = 'origin', color= 'origin')\nfig.write_image(\"images/plt_9.png\")\n</pre> fig = px.scatter(data_frame=mpg_data, x='cylinders', y = 'origin', color= 'origin') fig.write_image(\"images/plt_9.png\") <p></p> <p>In the dataset, US based cars have a higher count of cylinders, while Japanese and European cars have lower cylinders, but innovate in 3 cylinder or 5 cylinder engines. This might be due to racing being more poular and prevalant in the US or due to road networks being better in the US with consumer culture demanding more powerful cars.</p> In\u00a0[127]: Copied! <pre>#px.box(data_frame=mpg_data, x='mpg')\nfig = px.scatter(data_frame=mpg_data, x='model_year', y='mpg',facet_col='origin')\nfig.write_image(\"images/plt_10.png\")\n</pre> #px.box(data_frame=mpg_data, x='mpg') fig = px.scatter(data_frame=mpg_data, x='model_year', y='mpg',facet_col='origin') fig.write_image(\"images/plt_10.png\") <p></p> In\u00a0[128]: Copied! <pre>avg_group = pd.DataFrame()\navg_group = mpg_data.groupby(by='model_year').agg(average_mpg = ('mpg', 'mean'))\navg_group.reset_index()\n</pre> avg_group = pd.DataFrame() avg_group = mpg_data.groupby(by='model_year').agg(average_mpg = ('mpg', 'mean')) avg_group.reset_index() Out[128]: model_year average_mpg 0 70 17.689655 1 71 21.111111 2 72 18.714286 3 73 17.100000 4 74 22.769231 5 75 20.266667 6 76 21.573529 7 77 23.375000 8 78 24.061111 9 79 25.093103 10 80 33.803704 11 81 30.185714 12 82 32.000000 <p>A trend of mpg getting better across the years can be seen in all the countries.</p> In\u00a0[148]: Copied! <pre>fig = px.line(data_frame=avg_group,  y='average_mpg')\nfig.write_image(\"images/plt_11.png\")\n</pre> fig = px.line(data_frame=avg_group,  y='average_mpg') fig.write_image(\"images/plt_11.png\") <p></p> <p>Getting the average mpg for models that came out each year across all countries shows that there is actually a steady increase in the fuel efficiency across the years.</p> In\u00a0[130]: Copied! <pre>def get_first_name(x):\n    full_name= x.split(' ')\n    company = full_name[0]\n    return company\n\nmpg_data['company']= mpg_data['name'].apply(lambda x: get_first_name(x))\n</pre> def get_first_name(x):     full_name= x.split(' ')     company = full_name[0]     return company  mpg_data['company']= mpg_data['name'].apply(lambda x: get_first_name(x)) In\u00a0[131]: Copied! <pre>company_hist = px.histogram(data_frame= mpg_data, x='company')\ncompany_hist.write_image(\"images/plt_12.png\")\n</pre> company_hist = px.histogram(data_frame= mpg_data, x='company') company_hist.write_image(\"images/plt_12.png\") <p></p> In\u00a0[132]: Copied! <pre>country_df= mpg_data.groupby('company').agg(mean_mpg = ('mpg','mean'))\ncountry_df.reset_index().sort_values(by='mean_mpg', ascending=False).head()\n</pre> country_df= mpg_data.groupby('company').agg(mean_mpg = ('mpg','mean')) country_df.reset_index().sort_values(by='mean_mpg', ascending=False).head() Out[132]: company mean_mpg 36 vw 39.016667 21 nissan 36.000000 32 triumph 35.000000 15 honda 33.761538 10 datsun 31.113043 In\u00a0[133]: Copied! <pre>country_df= mpg_data.groupby('company').agg(mean_horsepower = ('horsepower','mean'))\ncountry_df.reset_index().sort_values(by='mean_horsepower', ascending=False).head()\n</pre> country_df= mpg_data.groupby('company').agg(mean_horsepower = ('horsepower','mean')) country_df.reset_index().sort_values(by='mean_horsepower', ascending=False).head() Out[133]: company mean_horsepower 14 hi 193.000000 9 chrysler 153.666667 4 cadillac 152.500000 8 chevy 142.333333 26 pontiac 136.937500 In\u00a0[134]: Copied! <pre>from plotly.subplots import make_subplots\n\ncol_names = ['mpg','cylinders','displacement','horsepower','weight','acceleration','model_year']\ngraph_names = [f'{col_names[0].upper()} vs {x.upper()}' for x in col_names[1:]]\nprint(graph_names)\nfig = make_subplots(rows=3,cols=2)\nsubplots =  [(1,1),(1,2),(2,1),(2,2),(3,1),(3,2)] \n\nfor i in range(1,len(col_names)):\n    row,col = subplots[i-1]\n    fig.add_trace(\n        go.Scatter(x=mpg_data[col_names[0]], y=mpg_data[col_names[i]], mode='markers',name=graph_names[i-1]),\n        row=row, col=col\n    )\n    fig.update_xaxes(title_text= col_names[0],row=row,col=col)\n    fig.update_yaxes(title_text= col_names[i],row=row,col=col)\n\nfig.update_layout(height=720, width=1080, title_text=f\"{col_names[0]} vs others\")\nfig.write_image(\"images/plt_13.png\")\n</pre> from plotly.subplots import make_subplots  col_names = ['mpg','cylinders','displacement','horsepower','weight','acceleration','model_year'] graph_names = [f'{col_names[0].upper()} vs {x.upper()}' for x in col_names[1:]] print(graph_names) fig = make_subplots(rows=3,cols=2) subplots =  [(1,1),(1,2),(2,1),(2,2),(3,1),(3,2)]   for i in range(1,len(col_names)):     row,col = subplots[i-1]     fig.add_trace(         go.Scatter(x=mpg_data[col_names[0]], y=mpg_data[col_names[i]], mode='markers',name=graph_names[i-1]),         row=row, col=col     )     fig.update_xaxes(title_text= col_names[0],row=row,col=col)     fig.update_yaxes(title_text= col_names[i],row=row,col=col)  fig.update_layout(height=720, width=1080, title_text=f\"{col_names[0]} vs others\") fig.write_image(\"images/plt_13.png\") <pre>['MPG vs CYLINDERS', 'MPG vs DISPLACEMENT', 'MPG vs HORSEPOWER', 'MPG vs WEIGHT', 'MPG vs ACCELERATION', 'MPG vs MODEL_YEAR']\n</pre> <p></p> In\u00a0[\u00a0]: Copied! <pre>from plotly.subplots import make_subplots\n\ncol_names = ['cylinders','displacement','horsepower','weight','acceleration','model_year']\ngraph_names = [f'{col_names[0].upper()} vs {x.upper()}' for x in col_names[1:]]\nprint(graph_names)\nfig = make_subplots(rows=3,cols=2)\nsubplots =  [(1,1),(1,2),(2,1),(2,2),(3,1),(3,2)] \n\nfor i in range(1,len(col_names)):\n    row,col = subplots[i-1]\n    fig.add_trace(\n        go.Scatter(y=mpg_data[col_names[0]], x=mpg_data[col_names[i]], mode='markers',name=graph_names[i-1]),\n        row=row, col=col\n    )\n    fig.update_yaxes(title_text= col_names[0],row=row,col=col)\n    fig.update_xaxes(title_text= col_names[i],row=row,col=col)\n\nfig.update_layout(height=720, width=1080, title_text=f\"{col_names[0]} vs others\")\nfig.write_image(\"images/plt_14.png\")\n</pre> from plotly.subplots import make_subplots  col_names = ['cylinders','displacement','horsepower','weight','acceleration','model_year'] graph_names = [f'{col_names[0].upper()} vs {x.upper()}' for x in col_names[1:]] print(graph_names) fig = make_subplots(rows=3,cols=2) subplots =  [(1,1),(1,2),(2,1),(2,2),(3,1),(3,2)]   for i in range(1,len(col_names)):     row,col = subplots[i-1]     fig.add_trace(         go.Scatter(y=mpg_data[col_names[0]], x=mpg_data[col_names[i]], mode='markers',name=graph_names[i-1]),         row=row, col=col     )     fig.update_yaxes(title_text= col_names[0],row=row,col=col)     fig.update_xaxes(title_text= col_names[i],row=row,col=col)  fig.update_layout(height=720, width=1080, title_text=f\"{col_names[0]} vs others\") fig.write_image(\"images/plt_14.png\") <pre>['CYLINDERS vs DISPLACEMENT', 'CYLINDERS vs HORSEPOWER', 'CYLINDERS vs WEIGHT', 'CYLINDERS vs ACCELERATION', 'CYLINDERS vs MODEL_YEAR']\n</pre> <p></p> In\u00a0[136]: Copied! <pre>from plotly.subplots import make_subplots\n\ncol_names = ['displacement','horsepower','weight','acceleration','model_year']\ngraph_names = [f'{col_names[0].upper()} vs {x.upper()}' for x in col_names[1:]]\nprint(graph_names)\nfig = make_subplots(rows=2,cols=2)\nsubplots =  [(1,1),(1,2),(2,1),(2,2)] \n\nfor i in range(1,len(col_names)):\n    row,col = subplots[i-1]\n    fig.add_trace(\n        go.Scatter(x=mpg_data[col_names[0]], y=mpg_data[col_names[i]], mode='markers',name=graph_names[i-1]),\n        row=row, col=col\n    )\n    fig.update_xaxes(title_text= col_names[0],row=row,col=col)\n    fig.update_yaxes(title_text= col_names[i],row=row,col=col)\n\nfig.update_layout(height=720, width=1080, title_text=f\"{col_names[0]} vs others\")\nfig.write_image(\"images/plt_15.png\")\n</pre> from plotly.subplots import make_subplots  col_names = ['displacement','horsepower','weight','acceleration','model_year'] graph_names = [f'{col_names[0].upper()} vs {x.upper()}' for x in col_names[1:]] print(graph_names) fig = make_subplots(rows=2,cols=2) subplots =  [(1,1),(1,2),(2,1),(2,2)]   for i in range(1,len(col_names)):     row,col = subplots[i-1]     fig.add_trace(         go.Scatter(x=mpg_data[col_names[0]], y=mpg_data[col_names[i]], mode='markers',name=graph_names[i-1]),         row=row, col=col     )     fig.update_xaxes(title_text= col_names[0],row=row,col=col)     fig.update_yaxes(title_text= col_names[i],row=row,col=col)  fig.update_layout(height=720, width=1080, title_text=f\"{col_names[0]} vs others\") fig.write_image(\"images/plt_15.png\") <pre>['DISPLACEMENT vs HORSEPOWER', 'DISPLACEMENT vs WEIGHT', 'DISPLACEMENT vs ACCELERATION', 'DISPLACEMENT vs MODEL_YEAR']\n</pre> <p></p> In\u00a0[137]: Copied! <pre>from plotly.subplots import make_subplots\n\ncol_names = ['horsepower','weight','acceleration','model_year']\ngraph_names = [f'{col_names[0].upper()} vs {x.upper()}' for x in col_names[1:]]\nprint(graph_names)\nfig = make_subplots(rows=2,cols=2)\nsubplots =  [(1,1),(1,2),(2,1),(2,2)] \n\nfor i in range(1,len(col_names)):\n    row,col = subplots[i-1]\n    fig.add_trace(\n        go.Scatter(x=mpg_data[col_names[0]], y=mpg_data[col_names[i]], mode='markers',name=graph_names[i-1]),\n        row=row, col=col\n    )\n    fig.update_xaxes(title_text= col_names[0],row=row,col=col)\n    fig.update_yaxes(title_text= col_names[i],row=row,col=col)\n\nfig.update_layout(height=720, width=1080, title_text=f\"{col_names[0]} vs others\")\nfig.write_image(\"images/plt_16.png\")\n</pre> from plotly.subplots import make_subplots  col_names = ['horsepower','weight','acceleration','model_year'] graph_names = [f'{col_names[0].upper()} vs {x.upper()}' for x in col_names[1:]] print(graph_names) fig = make_subplots(rows=2,cols=2) subplots =  [(1,1),(1,2),(2,1),(2,2)]   for i in range(1,len(col_names)):     row,col = subplots[i-1]     fig.add_trace(         go.Scatter(x=mpg_data[col_names[0]], y=mpg_data[col_names[i]], mode='markers',name=graph_names[i-1]),         row=row, col=col     )     fig.update_xaxes(title_text= col_names[0],row=row,col=col)     fig.update_yaxes(title_text= col_names[i],row=row,col=col)  fig.update_layout(height=720, width=1080, title_text=f\"{col_names[0]} vs others\") fig.write_image(\"images/plt_16.png\") <pre>['HORSEPOWER vs WEIGHT', 'HORSEPOWER vs ACCELERATION', 'HORSEPOWER vs MODEL_YEAR']\n</pre> <p></p> In\u00a0[138]: Copied! <pre>correlation = mpg_data.select_dtypes('number').corr('pearson')\ncorrelation\n</pre> correlation = mpg_data.select_dtypes('number').corr('pearson') correlation Out[138]: mpg cylinders displacement horsepower weight acceleration model_year mpg 1.000000 -0.777618 -0.805127 -0.778427 -0.832244 0.423329 0.580541 cylinders -0.777618 1.000000 0.950823 0.842983 0.897527 -0.504683 -0.345647 displacement -0.805127 0.950823 1.000000 0.897257 0.932994 -0.543800 -0.369855 horsepower -0.778427 0.842983 0.897257 1.000000 0.864538 -0.689196 -0.416361 weight -0.832244 0.897527 0.932994 0.864538 1.000000 -0.416839 -0.309120 acceleration 0.423329 -0.504683 -0.543800 -0.689196 -0.416839 1.000000 0.290316 model_year 0.580541 -0.345647 -0.369855 -0.416361 -0.309120 0.290316 1.000000 In\u00a0[\u00a0]: Copied! <pre>fig = px.imshow(correlation, text_auto=True, color_continuous_scale='thermal', aspect='auto')\nfig.write_image(\"/images/plt_17.png\")\n</pre> fig = px.imshow(correlation, text_auto=True, color_continuous_scale='thermal', aspect='auto') fig.write_image(\"/images/plt_17.png\") <p></p> <p>The correlation heatmaps confirms the relation between cylinder, displacement, horsepower and weight. We also see that these affect mpg negatively as expected.</p> <p>We can also see that there is a fair relationship between mpg and model years, meaning newer models tend to be fuel efficient.</p> <p>But then acceleration is negatively proportional to cylinder, displacement, horsepower and weight, which is still unexplained. Whats more, there is a weakly positive relation between acceleration and mpg meaning higher acceleration gives better mileage, which is not logical.</p> In\u00a0[140]: Copied! <pre>fig= px.scatter(data_frame=mpg_data, x='horsepower', y='mpg', color= 'model_year')\nfig.write_image(\"images/plt_18.png\")\n</pre> fig= px.scatter(data_frame=mpg_data, x='horsepower', y='mpg', color= 'model_year') fig.write_image(\"images/plt_18.png\") <p></p> <p>From this plot we can confirm that newer models are more efficient than the older ones. However, we can see that the newer models also have lower horsepower.</p> In\u00a0[141]: Copied! <pre>fig= px.scatter(data_frame=mpg_data, x='weight', y='horsepower', color= 'model_year')\nfig.write_image(\"images/plt_19.png\")\n</pre> fig= px.scatter(data_frame=mpg_data, x='weight', y='horsepower', color= 'model_year') fig.write_image(\"images/plt_19.png\") <p></p> <p>With this graph we find that heavier models are all older models, which also have a lot of horse power. The newer models are not only fuel efficient but are lighter and provide lower power output.</p> <p>This raises a questions as why the companies would build such cars with low power and weight but better fuel efficiency?</p> In\u00a0[142]: Copied! <pre>fig= px.scatter(data_frame=mpg_data, x='horsepower', y='acceleration', color= 'model_year')\nfig.write_image(\"images/plt_20.png\")\n</pre> fig= px.scatter(data_frame=mpg_data, x='horsepower', y='acceleration', color= 'model_year') fig.write_image(\"images/plt_20.png\") <p></p> <p>This tells us almost all new models have low horse power but high acceleration. Even though there were some older models that had low horsepower/high acceleration.</p> In\u00a0[143]: Copied! <pre>px.scatter(data_frame=mpg_data, x='weight', y='acceleration', color= 'horsepower', color_continuous_scale='temps')\nfig.write_image(\"images/plt_21.png\")\n</pre> px.scatter(data_frame=mpg_data, x='weight', y='acceleration', color= 'horsepower', color_continuous_scale='temps') fig.write_image(\"images/plt_21.png\") <p></p> <p>Higher horsepower cars are almost always rather heavy with lower acceleration.</p> In\u00a0[144]: Copied! <pre>cyl = mpg_data.groupby('model_year').aggregate(avg_no_of_cylinders = ('cylinders','mean'), avg_mpg=('mpg','mean') ).reset_index()\nfig = px.scatter(data_frame=cyl, x='model_year', y='avg_no_of_cylinders', color='avg_mpg')\nfig.write_image(\"images/plt_22.png\")\n</pre> cyl = mpg_data.groupby('model_year').aggregate(avg_no_of_cylinders = ('cylinders','mean'), avg_mpg=('mpg','mean') ).reset_index() fig = px.scatter(data_frame=cyl, x='model_year', y='avg_no_of_cylinders', color='avg_mpg') fig.write_image(\"images/plt_22.png\") <p></p> <p>Newer cars have fewer no of cylinders on average.</p> <p>These final graphs give us answers to a few questions we were asking.</p>"},{"location":"data_exploration_rendered/#data-visualization-of-seaborn-data","title":"Data Visualization of seaborn-data\u00b6","text":"<p>Analyzing mpg.csv data from seaborn-data dataset: https://github.com/mwaskom/seaborn-data/blob/master/mpg.csv</p> <p>I am using Plotly and Streamlit for this task.</p>"},{"location":"data_exploration_rendered/#initial-observation","title":"Initial Observation\u00b6","text":"<p>The car dataset has many models of cars produced across different years. The origin and engine performance metrics are listed out.</p>"},{"location":"data_exploration_rendered/#reading-and-cleaning-dataset","title":"Reading and cleaning dataset\u00b6","text":""},{"location":"data_exploration_rendered/#check-for-missing-values","title":"Check for missing values\u00b6","text":""},{"location":"data_exploration_rendered/#summary-of-the-data","title":"Summary of the Data\u00b6","text":""},{"location":"data_exploration_rendered/#univariate-analysis","title":"Univariate Analysis\u00b6","text":""},{"location":"data_exploration_rendered/#graphs-and-visualizations","title":"Graphs and Visualizations\u00b6","text":""},{"location":"data_exploration_rendered/#inspecting-outliers","title":"Inspecting Outliers\u00b6","text":""},{"location":"data_exploration_rendered/#observations","title":"Observations\u00b6","text":"<p>From these two graphs we can have some insights as to how:</p> <ul> <li>4 cylinder cars have lower horsepower but are more fuel efficient.</li> <li>6 cylinder cars seems to have a balanced horsepower and fuel consumption.</li> <li>On the contrary, 8 cylinder cars have greater horsepower but are quite fuel hungry in general.</li> </ul> <p>All this seems to be in line with the hypothesis that the 3 and 5 cylinder engines are not very performant, giving relatively low horsepower over average fuel efficiency. The 4 cylinder cars seem to have a good balance between horsepower and miles per gallon.</p>"},{"location":"data_exploration_rendered/#spread-and-outliers","title":"Spread and Outliers\u00b6","text":"<p>There is a varied mpg and horsepower observed in 8 cylinder cars meaning there are a regular cars and then there are muscle cars giving a greater range of mpgs and horsepowers.</p> <p>There are some outliers is both mpg and horsepower graphs.</p>"},{"location":"data_exploration_rendered/#muscle-cars","title":"Muscle Cars\u00b6","text":"<p>The 6 cylinder buick regal sport coupe (turbo) is a muscle car giving a very high horsepower and comes in line with other average 8 cylinder cars. Similarly the 230hp pontiac grand prix is a 8 cylinder beast of a muscle car which explains the very high horsepower.</p>"},{"location":"data_exploration_rendered/#efficient-cars","title":"Efficient Cars\u00b6","text":"<p>There are certain economy or diesel version of cars that make them exceptionally fuel efficient like the 6 cylinder oldsmobile cutlass ciera (diesel) or the 8 cylinder oldsmobile cutlass ls</p> <p>To get a more complete picture, we need to perform further analysis. Let us hence try to gather more insights from our data regarding engine performance with respect to number of cylinders, displacement, weight and country of origin.</p>"},{"location":"data_exploration_rendered/#bivariate-analysis","title":"Bivariate analysis\u00b6","text":""},{"location":"data_exploration_rendered/#company-names","title":"Company names\u00b6","text":"<p>Getting names of company to see the Distribution of Car according to company</p>"},{"location":"data_exploration_rendered/#bivariate-analysis-of-numerical-data","title":"Bivariate Analysis of Numerical Data\u00b6","text":"<p>To gain proper insigts and explore, I wrote code to plot all values vs all other values.</p>"},{"location":"data_exploration_rendered/#observations-mpg-vs-others","title":"Observations: mpg vs others\u00b6","text":"<p>From these graphs, we can make a number of Observations.</p> <ul> <li>A trend that shows more number of cylinders reduces fuel efficiency.</li> <li>Higher horsepower,displacement and weight show lower fuel efficiency.</li> <li>Acceleration and mpg do not have a obvious relationship due to a highly scattered plot. We do see a proportional trend, which is quite counter intuitive.</li> <li>As the years progress, cars are getting more fuel efficient.</li> </ul>"},{"location":"data_exploration_rendered/#observations-cylinders-vs-others","title":"Observations: Cylinders vs others\u00b6","text":"<p>We can see that more number of cylinder means higher horse power, more displacement and also a heavier engine.</p> <p>There is no clear relationship between the model year and the number of cylinders, indicating that cars with varying engine types were produced across all years.</p> <p>Checking out the 4 cylinder engines, we observe that they give great fuel efficiency with light engines but with lower horse power. This could also mean they are both cheaper to manufacture and to use. This could explain why there are greater number of cars with 4 cylinder engines produced.</p> <p>We can not however, say for sure that these 4 cylinder cars are the most poular or most bought cars though. For that, we would need the sales data of these models to be certain.</p> <p>6 cylinder engines have a good balance of efficiency and horsepower. 8 cylinder engines pack a punch with higher horsepower but guzzle a lot of fuel. The 8 cylinder engines are some of the most powerful engines with very high horsepower. This makes sense as more cylinders will displace more fuel, producing more power but meaning lower fuel efficiency. At the same time bigger and heavier engines are needed to accomodate more number of cylinders.</p>"},{"location":"data_exploration_rendered/#observation-horsepower-vs-others-displacement-vs-others","title":"Observation: horsepower vs others &amp; displacement vs others\u00b6","text":"<p>We can see the relationships between weight, displacement and horsepower, i.e</p> <p>more displacement \u2192 more horsepower</p> <p>more displacement \u2192 more weight</p> <p>meaning higher horsepower engines are heavier like we observed before.</p> <p>The relationshoip between acceleration and displacement and acceleration and horsepower is negatively proportional though. This is rather counter intuitive as you might think cars having higher horsepower/displacement should provide higher acceleration as well. But that is not the case at all.</p> <p>What we can also see is that newer models have lower horsepower.</p> <p>To make more sense out of this we can create a correlation heatmap and perform further multivariate analysis.</p>"},{"location":"data_exploration_rendered/#correlation-heatmap","title":"CORRELATION HEATMAP\u00b6","text":""},{"location":"data_exploration_rendered/#conclusions","title":"Conclusions\u00b6","text":""},{"location":"data_exploration_rendered/#why-would-acceleration-increase-when-horsepower-is-decreasing","title":"Why would acceleration increase when horsepower is decreasing?\u00b6","text":"<p>Newer cars have higher acceleration despite lower horsepower. And along with good acceleration, these cars are also fuel efficient.</p> <p>Turns out the acceleration in cars are increasing beacuse cars are getting lighter, requiring less power to accelerate.</p>"},{"location":"data_exploration_rendered/#why-did-the-companies-start-making-lower-power-fuel-efficient-cars","title":"Why did the companies start making lower power, fuel efficient cars?\u00b6","text":"<p>This data does make it clear that cars do not only need raw horsepower. They can be fast and fuel efficient even with lower horsepower. With fuel emmisions being a major concern and major technological breakthroughs, it is compeletely sensible now that the companies chose to make their cars this way. What is more that the cars could be cheaper with less materials being used and the car would be less expensive to operate for the customers as well all while being better for the environment.</p> <p>There might be several factors that the data does not capture. The newer cars would have better technology like lighter materials, aerodynamics, better fuel composition and better engineering as well. But the fact is that car companies did make lighter, fuel efficient cars earlier too; only that they chose to keep making newer cars that were lower power and less fuel hungry.</p>"},{"location":"data_exploration_rendered/#why-are-there-so-many-4-cylinder-cars","title":"Why are there so many 4 cylinder cars?\u00b6","text":"<p>This falls in line with the fact that the newer models have on average lower number of cylinders. This also makes us understand as why there are more number of 4 cylinder cars which are the lightest and most fuel efficient, with better stability, lower vibration and possibly the cost.</p>"}]}